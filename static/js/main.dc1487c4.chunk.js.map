{"version":3,"sources":["components/NeatherMap.jsx","components/ModalNeatherMap.jsx","components/NamesNeatherMap.jsx","App.js","serviceWorker.js","redux/reducers/branchs.js","redux/reducers/addBranchForm.js","redux/reducers/user.js","redux/reducers/branchsOnModeration.js","redux/reducers/branchsOnNeaterMapModeration.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["NeatherMap","props","startLooking","evt","mouseDown","startDragOffset","x","clientX","translatePos","y","clientY","looking","draw","scale","undefined","markers","mouseOnMarker","map","index","markerHitbox","markerInfo","pageX","xStart","xFinish","pageY","yStart","yFinish","current","style","markerForModal","setState","modalNeatherMapIsOpen","pointModal","finishLooking","wheel","deltaY","scaleMultiplier","points","point","push","pointRadius","firstRender","isRender","state","renderMainTunnels","maxCordMainTunnel","ctx","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","clearRect","width","height","save","translate","branchs","line","tunnel","branch","type","arc","fillStyle","fill","restore","React","createRef","this","getContext","onMarkerView","z","startTranslatePos","position","overflow","document","body","clientHeight","clientWidth","ref","onMouseDown","onMouseMove","onMouseUp","onMouseOver","onWheel","onClick","marker","key","Component","connect","ModalNeatherMap","className","left","top","name","description","NamesNeatherMap","fontSize","App","path","exact","to","display","margin","href","component","Boolean","window","location","hostname","match","initialState","branchsFilter","action","payload","title","hasTunnel","hasTwoTunnelDisabled","hasTwoTunnel","branchColor","addBranchFilter","user","userReducer","branchsOnModerationReducer","branchsOnNeaterMapModerationReducer","rootReducer","combineReducers","addBranchForm","branchsOnModeration","branchsOnNeaterMapModeration","store","createStore","localStorage","getItem","JSON","parse","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dc1487c4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { ModalNeatherMap, NamesNeatherMap } from './index'\r\nimport { connect } from 'react-redux'\r\n\r\nclass NeatherMap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.NeatherMap = React.createRef();\r\n        this.state = {\r\n            modalNeatherMapIsOpen: false,\r\n            isRender: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.ctx = this.NeatherMap.current.getContext('2d');\r\n        this.onMarkerView = {\r\n            x: 0,\r\n            z: 0\r\n        }\r\n        this.mouseDown = false;\r\n        this.startDragOffset = {};\r\n        this.pointRadius = 5;\r\n        this.scale = 1.0;\r\n        this.scaleMultiplier = 0.9;\r\n        this.translatePos = {\r\n            x: this.NeatherMap.current.width / 2 - this.onMarkerView.x,\r\n            y: this.NeatherMap.current.height / 2 - this.onMarkerView.z\r\n        };\r\n        this.startTranslatePos = {\r\n            x: this.NeatherMap.current.width / 2,\r\n            y: this.NeatherMap.current.height / 2\r\n        };\r\n        this.firstRender = true;\r\n        this.draw(this.scale, this.translatePos);\r\n        this.pointModal()\r\n     }\r\n\r\n     componentDidUpdate() {\r\n        this.draw(this.scale, this.translatePos);\r\n     }\r\n\r\n     startLooking = (evt) => {\r\n        this.mouseDown = true;\r\n        this.startDragOffset.x = evt.clientX - this.translatePos.x;\r\n        this.startDragOffset.y = evt.clientY - this.translatePos.y;\r\n     }\r\n\r\n     looking = (evt) => {\r\n        if (this.mouseDown) {\r\n            this.translatePos.x = evt.clientX - this.startDragOffset.x;\r\n            this.translatePos.y = evt.clientY - this.startDragOffset.y;\r\n            this.draw(this.scale, this.translatePos);\r\n        }\r\n        if (this.markers !== undefined) {\r\n            this.mouseOnMarker = false;\r\n            this.markers.map(({markerHitbox, markerInfo}, index) => {\r\n                if (evt.pageX > markerHitbox.xStart &&\r\n                    evt.pageX < markerHitbox.xFinish &&\r\n                    evt.pageY > markerHitbox.yStart &&\r\n                    evt.pageY < markerHitbox.yFinish \r\n                    ) {\r\n                        this.NeatherMap.current.style = 'cursor: pointer;'\r\n                        this.mouseOnMarker = true\r\n                        this.markerForModal = [markerHitbox, markerInfo]\r\n                        this.setState({modalNeatherMapIsOpen: true})\r\n                    }\r\n                if (!this.mouseOnMarker) {\r\n                    this.NeatherMap.current.style = 'cursor: default;'\r\n                    this.setState({modalNeatherMapIsOpen: false})\r\n                }\r\n            })\r\n        }\r\n        this.pointModal()\r\n     }\r\n\r\n     finishLooking = () => {\r\n        this.mouseDown = false;\r\n     }\r\n\r\n     wheel = (evt) => {\r\n        if (evt.deltaY > 0) {\r\n            this.scale *= this.scaleMultiplier\r\n        } else {\r\n            this.scale /= this.scaleMultiplier\r\n        }\r\n        if (this.scale > 2) { this.scale = 2 }\r\n        if (this.scale < 0.5) { this.scale = 0.5 }\r\n        this.pointModal()\r\n        this.draw(this.scale, this.translatePos);\r\n        this.setState({modalNeatherMapIsOpen: false})\r\n     }\r\n\r\n     pointModal = () => {\r\n        this.markers = []\r\n        this.points.map(({point}) => {\r\n            this.markers.push({\r\n                markerHitbox: {\r\n                    xStart: this.translatePos.x + (point.x * this.scale) - this.pointRadius,\r\n                    xFinish: this.translatePos.x + (point.x * this.scale) + this.pointRadius,\r\n                    yStart: this.translatePos.y + (point.y * this.scale) - this.pointRadius,\r\n                    yFinish: this.translatePos.y + (point.y * this.scale) + this.pointRadius,\r\n                },\r\n                markerInfo: {point}\r\n            })\r\n        })\r\n        if (this.firstRender) {\r\n            this.setState({isRender: !this.state.isRender})\r\n            this.firstRender = false;\r\n        }\r\n     }\r\n\r\n     renderMainTunnels = () => {\r\n        this.maxCordMainTunnel = 2000;\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(0, 0);\r\n        this.ctx.lineTo(0, this.maxCordMainTunnel);\r\n        this.ctx.strokeStyle = 'red'\r\n        this.ctx.lineWidth = '10';\r\n        this.ctx.stroke();\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(0, 0);\r\n        this.ctx.lineTo(0, -this.maxCordMainTunnel);\r\n        this.ctx.strokeStyle = 'blue'\r\n        this.ctx.lineWidth = '10';\r\n        this.ctx.stroke();\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(0, 0);\r\n        this.ctx.lineTo(this.maxCordMainTunnel, 0);\r\n        this.ctx.strokeStyle = 'yellow'\r\n        this.ctx.lineWidth = '10';\r\n        this.ctx.stroke();\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(0, 0);\r\n        this.ctx.lineTo(-this.maxCordMainTunnel, 0);\r\n        this.ctx.strokeStyle = 'green'\r\n        this.ctx.lineWidth = '10';\r\n        this.ctx.stroke();\r\n     }\r\n\r\n     draw = (scale, translatePos) => {\r\n        this.ctx.clearRect(0, 0, this.NeatherMap.current.width, this.NeatherMap.current.height);\r\n        this.ctx.save();\r\n        this.ctx.translate(translatePos.x, translatePos.y);\r\n        this.ctx.scale(scale, scale);\r\n\r\n        this.renderMainTunnels()\r\n\r\n        this.points = [];\r\n\r\n        this.props.branchs.map(line => {\r\n            this.ctx.beginPath();\r\n\r\n            if (line.tunnel && line.branch !== 'two') {\r\n\r\n                if (line.branch === 'red' || line.branch === 'blue') {\r\n                    this.ctx.moveTo(0, line.y);\r\n                    this.ctx.lineTo(line.x, line.y);\r\n                } else if (line.branch === 'green' || line.branch === 'yellow') {\r\n                    this.ctx.moveTo(line.x, 0);\r\n                    this.ctx.lineTo(line.x, line.y);\r\n                }\r\n    \r\n                switch (line.branch) {\r\n                    case 'blue':\r\n                        this.ctx.strokeStyle = 'blue'\r\n                        break;\r\n                    case 'yellow':\r\n                        this.ctx.strokeStyle = 'yellow'\r\n                        break;\r\n                    case 'red':\r\n                        this.ctx.strokeStyle = 'red'\r\n                        break;\r\n                    case 'green':\r\n                        this.ctx.strokeStyle = 'green'\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                this.ctx.lineWidth = '8';\r\n                this.ctx.stroke();\r\n            }\r\n\r\n            if (line.branch === 'two') {\r\n                this.ctx.beginPath();\r\n                this.ctx.moveTo(0, line.y);\r\n                this.ctx.lineTo(line.x, line.y);\r\n                if (line.y < 0) {\r\n                    this.ctx.strokeStyle = 'blue'\r\n                } else {\r\n                    this.ctx.strokeStyle = 'red'    \r\n                }\r\n                this.ctx.lineWidth = '10';\r\n                this.ctx.stroke();\r\n\r\n                this.ctx.beginPath();\r\n                this.ctx.moveTo(line.x, 0);\r\n                this.ctx.lineTo(line.x, line.y);\r\n                if (line.x < 0) {\r\n                    this.ctx.strokeStyle = 'green'\r\n                } else {\r\n                    this.ctx.strokeStyle = 'yellow'    \r\n                }\r\n                this.ctx.lineWidth = '10';\r\n                this.ctx.stroke();\r\n            }\r\n    \r\n            if (line.type === 'portal' || line.type === 'end') {\r\n                this.ctx.beginPath();\r\n                this.points.push({point: line})\r\n                this.ctx.arc(line.x, line.y, this.pointRadius, 0, 2 * 3.14)\r\n                this.ctx.lineWidth = '1';\r\n                this.ctx.fillStyle = 'purple'\r\n                this.ctx.strokeStyle = 'black';\r\n                this.ctx.stroke();\r\n                this.ctx.fill();\r\n            }\r\n    \r\n            if (line.type === 'hab') {\r\n                this.ctx.beginPath();\r\n                this.ctx.arc(line.x, -line.y, 25, 0, 2 * 3.14)\r\n                this.ctx.lineWidth = '1';\r\n                this.ctx.fillStyle = 'white';\r\n                this.ctx.strokeStyle = 'black';\r\n                this.ctx.stroke();\r\n                this.ctx.fill();\r\n            }\r\n        })\r\n        this.ctx.restore();\r\n     }\r\n    \r\n    render() {\r\n        return (\r\n            <div style={{position: \"relative\", overflow: \"hidden\"}}>\r\n                <canvas \r\n                height={document.body.clientHeight}\r\n                width={document.body.clientWidth}\r\n                ref={this.NeatherMap} \r\n                onMouseDown={this.startLooking}\r\n                onMouseMove={this.looking}\r\n                onMouseUp={this.finishLooking}\r\n                onMouseOver={this.finishLooking}\r\n                onWheel={this.wheel}\r\n                onClick={this.pointModal}\r\n                />\r\n                {\r\n                    this.markers === undefined \r\n                    ?\r\n                    ''\r\n                    :\r\n                    this.markers.map((marker, index) => <NamesNeatherMap props={marker} scale={this.scale} key={index}/>)\r\n                }\r\n                {this.state.modalNeatherMapIsOpen && <ModalNeatherMap marker={this.markerForModal} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        branchs: state.branchs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NeatherMap)\r\n","import React from 'react'\r\n\r\nconst ModalNeatherMap = (props) => {\r\n    const markerHitbox = props.marker[0]\r\n    const markerInfo = props.marker[1].point\r\n    return (\r\n        <div className=\"modalNeatherMap\" style={{left: markerHitbox.xFinish + 5, top: markerHitbox.yStart}}>\r\n            <h2 className=\"modalNeatherMap__title\">{markerInfo.name}</h2>\r\n            <div className=\"modalNeatherMap__description\">{markerInfo.description}</div>\r\n            <div className=\"modalNeatherMap__cords\">\r\n                <div>X: <span>{markerInfo.x}</span></div>\r\n                <div>Z: <span>{markerInfo.y}</span></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalNeatherMap\r\n","import React from 'react'\r\n\r\nfunction NamesNeatherMap({props, scale}) {\r\n    return (\r\n        <div className=\"nameNeatherMap\" style={{left: props.markerHitbox.xFinish + 7, top: props.markerHitbox.yStart, fontSize: 14 * scale}}>\r\n            {props.markerInfo.point.name}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NamesNeatherMap\r\n","import React from 'react';\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\nimport { NeatherMap } from './components'\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <div>\r\n      <Route path='' exact>\r\n        <Link to=\"neather\" style={{display: \"block\", margin: \"20px\"}}>Карта хайперлупов (Работает только на компьютере)</Link>\r\n        <a style={{display: \"block\", margin: \"20px\"}} href=\"https://docs.google.com/spreadsheets/d/1H6pn4vk-HvZuHFTm8-ZwM9rafYJXuNHkOfJl7_M6_R8/edit#gid=0\">Таблица банка райска</a>\r\n      </Route>\r\n      <Route component={NeatherMap} path='/neather' exact />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = [\r\n    // { name: 'Красная', description: 'Тест', branch: 'red', type: 'portal', tunnel: true, x: 50, y: 100 },\r\n    // { name: 'Красная', description: 'Тест', branch: 'red', type: 'portal', tunnel: true, x: -50, y: 100 },\r\n    // { name: 'Желтая', description: 'Тест', branch: 'yellow', type: 'portal', tunnel: true, x: 100, y: 50 },\r\n    // { name: 'Желтая', description: 'Тест', branch: 'yellow', type: 'portal', tunnel: true, x: 100, y: -50 },\r\n    // { name: 'Синяя', description: 'Тест', branch: 'blue', type: 'portal', tunnel: true, x: 50, y: -100 },\r\n    // { name: 'Синяя', description: 'Тест', branch: 'blue', type: 'portal', tunnel: true, x: -50, y: -100 },\r\n    // { name: 'Зеленая', description: 'Тест', branch: 'green', type: 'portal', tunnel: true, x: -100, y: 50 },\r\n    // { name: 'Зеленая', description: 'Тест', branch: 'green', type: 'portal', tunnel: true, x: -100, y: -50 },\r\n    // { name: 'Синяя Желтая', description: 'Тест', branch: 'two', type: 'portal', tunnel: true, x: 300, y: -300 },\r\n    // { name: 'Синяя Зеленая', description: 'Тест', branch: 'two', type: 'portal', tunnel: true, x: -300, y: -300 },\r\n    // { name: 'Красная Желтая', description: 'Тест', branch: 'two', type: 'portal', tunnel: true, x: 300, y: 300 },\r\n    // { name: 'Красная Зеленая', description: 'Тест', branch: 'two', type: 'portal', tunnel: true, x: -300, y: 300 },\r\n    { name: 'Райск', description: 'Столица Империи', branch: 'red', type: 'portal', tunnel: true, x: 21, y: 194 },\r\n    { name: 'Фермы', description: 'Тут ферма пороха, опыта и кактусов', branch: 'red', type: 'portal', tunnel: true, x: -12, y: 314 },\r\n    { name: 'Крепость', description: 'Крепость нижнего мира', branch: false, type: 'portal', tunnel: true, x: 100, y: 350 },\r\n    { name: 'Месса', description: 'Тут много терракоты', branch: 'red', type: 'portal', tunnel: true, x: 15, y: 525 },\r\n    { name: 'Главный портал в эндер мир', description: 'Если возродил дракона, то сам его и убивай', branch: 'red', type: 'portal', tunnel: true, x: 121, y: 146 },\r\n    { name: 'Пляж', description: 'Заброшенное место', branch: 'yellow', type: 'portal', tunnel: true, x: 175, y: 62 },\r\n    { name: 'Ферма гвардианов', description: 'Тут можно пофармить морские фонарики', branch: 'green', type: 'portal', tunnel: true, x: -194, y: 42 },\r\n    { name: 'Красный биом', description: 'Много боровов', branch: 'green', type: 'portal', tunnel: true, x: -1000, y: -200 },\r\n    { name: 'Тёмный лес', description: 'Тёмный лес, ровное болото', branch: 'blue', type: 'portal', tunnel: true, x: -8, y: -126 },\r\n    { name: 'Грибной остров', description: 'Можно брать грибных коров', branch: 'blue', type: 'portal', tunnel: true, x: -473, y: -1062 },\r\n    { name: 'Хаб', description: 'тут', branch: 'all', type: 'hab', x: 0, y: 0 },\r\n];\r\n\r\nconst branchsFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'BRANCHS':\r\n           return [\r\n               ...state, action.payload\r\n           ]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default branchsFilter","const initialState = {\r\n    title: '',\r\n    description: '',\r\n    x: '0',\r\n    y: '0',\r\n    hasTunnel: false,\r\n    hasTwoTunnelDisabled: true,\r\n    hasTwoTunnel: false,\r\n    branchColor: []\r\n}\r\n\r\nconst addBranchFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_BRANCH_TITLE':\r\n            return {\r\n                ...state,\r\n                title: action.payload,\r\n            }\r\n        case 'ADD_BRANCH_DESCRIPTION':\r\n            return {\r\n                ...state,\r\n                description: action.payload,\r\n            }\r\n        case 'ADD_BRANCH_X':\r\n            return {\r\n                ...state,\r\n                x: action.payload,\r\n                hasTwoTunnel: false,\r\n                branchColor: [],\r\n            }\r\n        case 'ADD_BRANCH_Y':\r\n            return {\r\n                ...state,\r\n                y: action.payload,\r\n                hasTwoTunnel: false,\r\n                branchColor: [],\r\n            }\r\n        case 'ADD_BRANCH_HAS_TUNNEL':\r\n            return {\r\n                ...state,\r\n                hasTunnel: action.payload,\r\n                branchColor: [],\r\n            }\r\n        case 'ADD_BRANCH_HAS_TWO_TUNNEL_DISABLED':\r\n            return {\r\n                ...state,\r\n                hasTwoTunnelDisabled: action.payload,\r\n                branchColor: [],\r\n            }\r\n        case 'ADD_BRANCH_HAS_TWO_TUNNEL':\r\n            return {\r\n                ...state,\r\n                hasTwoTunnel: action.payload,\r\n            }\r\n        case 'ADD_BRANCH_COLOR':\r\n            return {\r\n                ...state,\r\n                branchColor: action.payload,\r\n                hasTwoTunnel: false,\r\n            }\r\n        case 'ADD_BRANCH_EMPTY':\r\n            return {\r\n                ...state,\r\n                title: '',\r\n                description: '',\r\n                x: '0',\r\n                y: '0',\r\n                hasTunnel: false,\r\n                hasTwoTunnelDisabled: true,\r\n                hasTwoTunnel: false,\r\n                branchColor: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default addBranchFilter","const initialState = {\r\n    user: 'user'\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer","const initialState = [\r\n    { name: 'Что здесь?', description: 'лалалалалалала', branch: 'two', type: 'portal', tunnel: true, x: 1500, y: 1500 },\r\n    { name: 'Плохой маркер', description: 'АХХАХА', branch: 'two', type: 'portal', tunnel: true, x: 345, y: 1456 },\r\n    { name: 'Магазин брони', description: 'Здесь вы можете купить броню', branch: 'yellow', type: 'portal', tunnel: true, x: 700, y: -500 },\r\n    { name: 'Сцена для мероприятий', description: 'Вход свободный, скоро построим туннель!', branch: false, type: 'portal', tunnel: false, x: -300, y: 200 },\r\n]\r\n\r\nconst branchsOnModerationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'BRANCHS_ON_MODEDERATION':\r\n            return [...state, action.payload]\r\n        case 'DELITE_ONE_BRANCH_ON_MODERATION':\r\n            return [...action.payload]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default branchsOnModerationReducer","const initialState = []\r\n\r\nconst branchsOnNeaterMapModerationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'BRANCHS_ON_NEATHER_MAP_MODERATION':\r\n            return [...action.payload]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default branchsOnNeaterMapModerationReducer","import { combineReducers } from 'redux'\r\n\r\nimport branchsFilter from './branchs'\r\nimport addBranchFilter from './addBranchForm'\r\nimport userReducer from './user'\r\nimport branchsOnModerationReducer from './branchsOnModeration'\r\nimport branchsOnNeaterMapModerationReducer from './branchsOnNeaterMapModeration'\r\n\r\nconst rootReducer = combineReducers({\r\n    branchs: branchsFilter,\r\n    addBranchForm: addBranchFilter,\r\n    user: userReducer,\r\n    branchsOnModeration: branchsOnModerationReducer,\r\n    branchsOnNeaterMapModeration: branchsOnNeaterMapModerationReducer,\r\n})\r\n\r\nexport default rootReducer","import { createStore } from 'redux'\r\nimport rootReducer from './reducers/index'\r\n\r\nconst store = createStore(rootReducer,\r\n     localStorage.getItem('redux-store') === null ? {} : JSON.parse(localStorage.getItem('redux-store')), \r\n     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nstore.subscribe(() => {\r\n    localStorage.setItem('redux-store', JSON.stringify(store.getState()))\r\n})\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport './scss/app.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}