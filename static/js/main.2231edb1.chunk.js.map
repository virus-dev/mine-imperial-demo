{"version":3,"sources":["img/burgerMenu.svg","img/mainPage.jpg","components/Header.jsx","components/NeatherMap.jsx","components/ModalNeatherMap.jsx","components/NamesNeatherMap.jsx","redux/actions/addBranchOnModeration.js","redux/actions/addBranchForm.js","components/AddBranch.jsx","components/ModalWindow.jsx","components/AddBranchForm.jsx","pages/Moderation.jsx","redux/actions/branchsOnNeaterMapModeration.js","pages/Settings.jsx","redux/actions/setUser.js","redux/actions/addBranch.js","pages/MapModeration.jsx","pages/MainPage.jsx","App.js","serviceWorker.js","redux/reducers/branchs.js","redux/reducers/addBranchForm.js","redux/reducers/user.js","redux/reducers/branchsOnModeration.js","redux/reducers/branchsOnNeaterMapModeration.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","Header","props","user","useState","burgerMenuOpened","setBurgerMenuOpened","state","useSelector","burgerIcon","React","useRef","closeBurgerMenu","handleOutsideClick","e","path","includes","current","useEffect","document","body","addEventListener","className","to","exact","ref","onClick","src","burgerMenu","alt","NeatherMap","startLooking","evt","mouseDown","startDragOffset","x","clientX","translatePos","y","clientY","looking","draw","scale","undefined","markers","mouseOnMarker","map","index","markerHitbox","markerInfo","pageX","xStart","xFinish","pageY","yStart","yFinish","style","markerForModal","setState","modalNeatherMapIsOpen","pointModal","finishLooking","wheel","deltaY","scaleMultiplier","points","point","push","pointRadius","firstRender","isRender","renderMainTunnels","maxCordMainTunnel","ctx","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","clearRect","width","height","save","translate","branchs","line","tunnel","branch","type","arc","fillStyle","fill","restore","createRef","this","getContext","onMarkerView","z","startTranslatePos","position","overflow","clientHeight","clientWidth","onMouseDown","onMouseMove","onMouseUp","onMouseOver","onWheel","marker","key","Component","connect","dispatch","ModalNeatherMap","left","top","name","description","NamesNeatherMap","fontSize","deliteOneBranchOnModeration","action","payload","addBranchHasTwoTunnelDisabled","addBranchHasTwoTunnel","addBranchColor","AddBranch","useDispatch","addBranchForm","visibleModal","setVisibleModal","title","btnConfirm","hasTunnel","branchColor","length","color","btnClose","ModalWindow","AddBranchForm","buttons","text","branchVisible","setBranchVisible","textCheck","numbersSymvols","banSymvols","outer","i","target","value","replace","addBranchDescription","slice","addBranchX","addBranchY","checkboxCheck","hasTwoTunnel","btn","htmlFor","id","maxlength","onChange","checked","disabled","hasTwoTunnelDisabled","Moderation","branchsOnModeration","item","console","log","mapModerationGenerate","Settings","adminCheckbox","setAdminCheckbox","setUserAvtion","addBranch","MapModeration","buttonFunction","newBranchsModeration","branchsModeration","splice","branchsOnNeaterMapModeration","MainPage","mainPage","App","component","Boolean","window","location","hostname","match","initialState","branchsFilter","addBranchFilter","userReducer","branchsOnModerationReducer","branchsOnNeaterMapModerationReducer","rootReducer","combineReducers","store","createStore","localStorage","getItem","JSON","parse","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2231edb1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burgerMenu.86595150.svg\";","module.exports = __webpack_public_path__ + \"static/media/mainPage.ce792445.jpg\";","import React, { useState, useEffect } from 'react'\r\nimport burgerMenu from '../img/burgerMenu.svg'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { Route } from 'react-router-dom'\r\n\r\nfunction Header(props) {\r\n    const [burgerMenuOpened, setBurgerMenuOpened] = useState(false);\r\n    const state = useSelector(state => state.user.user)\r\n\r\n    const toggleOpenBurgerMenu = () => {\r\n        setBurgerMenuOpened(!burgerMenuOpened);\r\n    }\r\n    const burgerIcon = React.useRef();\r\n\r\n    const closeBurgerMenu = () => {\r\n        setBurgerMenuOpened(!burgerMenuOpened);\r\n    }\r\n\r\n    const handleOutsideClick = (e) => {\r\n        if (!e.path.includes(burgerIcon.current)) {\r\n            setBurgerMenuOpened(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.body.addEventListener('click', handleOutsideClick)\r\n    }, []);\r\n\r\n    let user;\r\n    if (state === 'user') {\r\n        user = 'Гость'\r\n    } else if (state === 'admin') {\r\n        user = 'Админ'\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"nothingLine\"></div>\r\n            <div className=\"container\">\r\n                <div className=\"header__inner\">\r\n                    <div className=\"header__logo header__item\">\r\n                        <Link to=\"/\">Лого</Link>\r\n                    </div>\r\n                    <div className=\"header__infoPage header__item\">\r\n                        <Route path='/' exact>Главная страница</Route>\r\n                        <Route path='/neather' exact>Карта нижнего мира</Route>\r\n                        <Route path='/moderation' exact>Модерация</Route>\r\n                        <Route path='/settings' exact>Настройки</Route>\r\n                        <Route path='/map-moderation' exact>Карта модерации</Route>\r\n                    </div>\r\n                    <div className=\"header__user header__item\">\r\n                        {user}\r\n                    </div>\r\n                    <div ref={burgerIcon} className=\"header__burger header__item\">\r\n                        <img onClick={() => toggleOpenBurgerMenu()} src={burgerMenu} alt=\"Бургер меню\"/>\r\n                        {burgerMenuOpened && \r\n                        <div className=\"header__burgerMenu\">\r\n                            <Link to=\"neather\" onClick={() => closeBurgerMenu()} className=\"header__burgerMenu__item\">Карта нижнего мира</Link>\r\n                            <Link to=\"settings\" onClick={() => closeBurgerMenu()} className=\"header__burgerMenu__item\">Настройки</Link>\r\n                            {state === 'admin' \r\n                                ? <Link to=\"moderation\" onClick={() => closeBurgerMenu()} className=\"header__burgerMenu__item\">Модерация</Link>\r\n                                : ''\r\n                            }\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { ModalNeatherMap, NamesNeatherMap, AddBranch } from './index'\r\nimport { connect } from 'react-redux'\r\n\r\nclass NeatherMap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.NeatherMap = React.createRef();\r\n        this.state = {\r\n            modalNeatherMapIsOpen: false,\r\n            isRender: false,\r\n        }\r\n     }\r\n\r\n     componentDidMount() {\r\n        this.ctx = this.NeatherMap.current.getContext('2d');\r\n        this.onMarkerView = {\r\n            x: 0,\r\n            z: 0\r\n        }\r\n        this.mouseDown = false;\r\n        this.startDragOffset = {};\r\n        this.pointRadius = 5;\r\n        this.scale = 1.0;\r\n        this.scaleMultiplier = 0.9;\r\n        this.translatePos = {\r\n            x: this.NeatherMap.current.width / 2 - this.onMarkerView.x,\r\n            y: this.NeatherMap.current.height / 2 - this.onMarkerView.z\r\n        };\r\n        this.startTranslatePos = {\r\n            x: this.NeatherMap.current.width / 2,\r\n            y: this.NeatherMap.current.height / 2\r\n        };\r\n        this.firstRender = true;\r\n        this.draw(this.scale, this.translatePos);\r\n        this.pointModal()\r\n     }\r\n\r\n     componentDidUpdate() {\r\n        this.draw(this.scale, this.translatePos);\r\n     }\r\n\r\n     startLooking = (evt) => {\r\n        this.mouseDown = true;\r\n        this.startDragOffset.x = evt.clientX - this.translatePos.x;\r\n        this.startDragOffset.y = evt.clientY - this.translatePos.y;\r\n     }\r\n\r\n     looking = (evt) => {\r\n        if (this.mouseDown) {\r\n            this.translatePos.x = evt.clientX - this.startDragOffset.x;\r\n            this.translatePos.y = evt.clientY - this.startDragOffset.y;\r\n            this.draw(this.scale, this.translatePos);\r\n        }\r\n        if (this.markers !== undefined) {\r\n            this.mouseOnMarker = false;\r\n            this.markers.map(({markerHitbox, markerInfo}, index) => {\r\n                if (evt.pageX > markerHitbox.xStart &&\r\n                    evt.pageX < markerHitbox.xFinish &&\r\n                    evt.pageY > markerHitbox.yStart &&\r\n                    evt.pageY < markerHitbox.yFinish \r\n                    ) {\r\n                        this.NeatherMap.current.style = 'cursor: pointer;'\r\n                        this.mouseOnMarker = true\r\n                        this.markerForModal = [markerHitbox, markerInfo]\r\n                        this.setState({modalNeatherMapIsOpen: true})\r\n                    }\r\n                if (!this.mouseOnMarker) {\r\n                    this.NeatherMap.current.style = 'cursor: default;'\r\n                    this.setState({modalNeatherMapIsOpen: false})\r\n                }\r\n            })\r\n        }\r\n        this.pointModal()\r\n     }\r\n\r\n     finishLooking = () => {\r\n        this.mouseDown = false;\r\n     }\r\n\r\n     wheel = (evt) => {\r\n        if (evt.deltaY > 0) {\r\n            this.scale *= this.scaleMultiplier\r\n        } else {\r\n            this.scale /= this.scaleMultiplier\r\n        }\r\n        if (this.scale > 2) { this.scale = 2 }\r\n        if (this.scale < 0.5) { this.scale = 0.5 }\r\n        this.pointModal()\r\n        this.draw(this.scale, this.translatePos);\r\n        this.setState({modalNeatherMapIsOpen: false})\r\n     }\r\n\r\n     pointModal = () => {\r\n        this.markers = []\r\n        this.points.map(({point}) => {\r\n            this.markers.push({\r\n                markerHitbox: {\r\n                    xStart: this.translatePos.x + (point.x * this.scale) - this.pointRadius,\r\n                    xFinish: this.translatePos.x + (point.x * this.scale) + this.pointRadius,\r\n                    yStart: this.translatePos.y + (point.y * this.scale) - this.pointRadius,\r\n                    yFinish: this.translatePos.y + (point.y * this.scale) + this.pointRadius,\r\n                },\r\n                markerInfo: {point}\r\n            })\r\n        })\r\n        if (this.firstRender) {\r\n            this.setState({isRender: !this.state.isRender})\r\n            this.firstRender = false;\r\n        }\r\n     }\r\n\r\n     renderMainTunnels = () => {\r\n        this.maxCordMainTunnel = 2000;\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(0, 0);\r\n        this.ctx.lineTo(0, this.maxCordMainTunnel);\r\n        this.ctx.strokeStyle = 'red'\r\n        this.ctx.lineWidth = '10';\r\n        this.ctx.stroke();\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(0, 0);\r\n        this.ctx.lineTo(0, -this.maxCordMainTunnel);\r\n        this.ctx.strokeStyle = 'blue'\r\n        this.ctx.lineWidth = '10';\r\n        this.ctx.stroke();\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(0, 0);\r\n        this.ctx.lineTo(this.maxCordMainTunnel, 0);\r\n        this.ctx.strokeStyle = 'yellow'\r\n        this.ctx.lineWidth = '10';\r\n        this.ctx.stroke();\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(0, 0);\r\n        this.ctx.lineTo(-this.maxCordMainTunnel, 0);\r\n        this.ctx.strokeStyle = 'green'\r\n        this.ctx.lineWidth = '10';\r\n        this.ctx.stroke();\r\n     }\r\n\r\n     draw = (scale, translatePos) => {\r\n        this.ctx.clearRect(0, 0, this.NeatherMap.current.width, this.NeatherMap.current.height);\r\n        this.ctx.save();\r\n        this.ctx.translate(translatePos.x, translatePos.y);\r\n        this.ctx.scale(scale, scale);\r\n\r\n        this.renderMainTunnels()\r\n\r\n        this.points = [];\r\n\r\n        this.props.branchs.map(line => {\r\n            this.ctx.beginPath();\r\n\r\n            if (line.tunnel && line.branch !== 'two') {\r\n\r\n                if (line.branch === 'red' || line.branch === 'blue') {\r\n                    this.ctx.moveTo(0, line.y);\r\n                    this.ctx.lineTo(line.x, line.y);\r\n                } else if (line.branch === 'green' || line.branch === 'yellow') {\r\n                    this.ctx.moveTo(line.x, 0);\r\n                    this.ctx.lineTo(line.x, line.y);\r\n                }\r\n    \r\n                switch (line.branch) {\r\n                    case 'blue':\r\n                        this.ctx.strokeStyle = 'blue'\r\n                        break;\r\n                    case 'yellow':\r\n                        this.ctx.strokeStyle = 'yellow'\r\n                        break;\r\n                    case 'red':\r\n                        this.ctx.strokeStyle = 'red'\r\n                        break;\r\n                    case 'green':\r\n                        this.ctx.strokeStyle = 'green'\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                this.ctx.lineWidth = '8';\r\n                this.ctx.stroke();\r\n            }\r\n\r\n            if (line.branch === 'two') {\r\n                this.ctx.beginPath();\r\n                this.ctx.moveTo(0, line.y);\r\n                this.ctx.lineTo(line.x, line.y);\r\n                if (line.y < 0) {\r\n                    this.ctx.strokeStyle = 'blue'\r\n                } else {\r\n                    this.ctx.strokeStyle = 'red'    \r\n                }\r\n                this.ctx.lineWidth = '10';\r\n                this.ctx.stroke();\r\n\r\n                this.ctx.beginPath();\r\n                this.ctx.moveTo(line.x, 0);\r\n                this.ctx.lineTo(line.x, line.y);\r\n                if (line.x < 0) {\r\n                    this.ctx.strokeStyle = 'green'\r\n                } else {\r\n                    this.ctx.strokeStyle = 'yellow'    \r\n                }\r\n                this.ctx.lineWidth = '10';\r\n                this.ctx.stroke();\r\n            }\r\n    \r\n            if (line.type === 'portal' || line.type === 'end') {\r\n                this.ctx.beginPath();\r\n                this.points.push({point: line})\r\n                this.ctx.arc(line.x, line.y, this.pointRadius, 0, 2 * 3.14)\r\n                this.ctx.lineWidth = '1';\r\n                this.ctx.fillStyle = 'purple'\r\n                this.ctx.strokeStyle = 'black';\r\n                this.ctx.stroke();\r\n                this.ctx.fill();\r\n            }\r\n    \r\n            if (line.type === 'hab') {\r\n                this.ctx.beginPath();\r\n                this.ctx.arc(line.x, -line.y, 25, 0, 2 * 3.14)\r\n                this.ctx.lineWidth = '1';\r\n                this.ctx.fillStyle = 'white';\r\n                this.ctx.strokeStyle = 'black';\r\n                this.ctx.stroke();\r\n                this.ctx.fill();\r\n            }\r\n        })\r\n        this.ctx.restore();\r\n     }\r\n    \r\n    render() {\r\n        return (\r\n            <div style={{position: \"relative\", overflow: \"hidden\"}}>\r\n                <canvas \r\n                height={document.body.clientHeight}\r\n                width={document.body.clientWidth}\r\n                ref={this.NeatherMap} \r\n                onMouseDown={this.startLooking}\r\n                onMouseMove={this.looking}\r\n                onMouseUp={this.finishLooking}\r\n                onMouseOver={this.finishLooking}\r\n                onWheel={this.wheel}\r\n                onClick={this.pointModal}\r\n                />\r\n                {\r\n                    this.markers === undefined \r\n                    ?\r\n                    ''\r\n                    :\r\n                    this.markers.map((marker, index) => <NamesNeatherMap props={marker} scale={this.scale} key={index}/>)\r\n                }\r\n                {this.state.modalNeatherMapIsOpen && <ModalNeatherMap marker={this.markerForModal} />}\r\n                <AddBranch />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        branchs: state.branchs\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NeatherMap)\r\n","import React from 'react'\r\n\r\nconst ModalNeatherMap = (props) => {\r\n    const markerHitbox = props.marker[0]\r\n    const markerInfo = props.marker[1].point\r\n    return (\r\n        <div className=\"modalNeatherMap\" style={{left: markerHitbox.xFinish + 5, top: markerHitbox.yStart}}>\r\n            <h2 className=\"modalNeatherMap__title\">{markerInfo.name}</h2>\r\n            <div className=\"modalNeatherMap__description\">{markerInfo.description}</div>\r\n            <div className=\"modalNeatherMap__cords\">\r\n                <div>X: <span>{markerInfo.x}</span></div>\r\n                <div>Z: <span>{markerInfo.y}</span></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalNeatherMap\r\n","import React from 'react'\r\n\r\nfunction NamesNeatherMap({props, scale}) {\r\n    return (\r\n        <div className=\"nameNeatherMap\" style={{left: props.markerHitbox.xFinish + 7, top: props.markerHitbox.yStart, fontSize: 14 * scale}}>\r\n            {props.markerInfo.point.name}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NamesNeatherMap\r\n","const BRANCHS_ON_MODEDERATION = 'BRANCHS_ON_MODEDERATION'\r\nconst DELITE_ONE_BRANCH_ON_MODERATION = 'DELITE_ONE_BRANCH_ON_MODERATION'\r\n\r\nexport const addBranchOnModeration = action => ({\r\n    type: BRANCHS_ON_MODEDERATION,\r\n    payload: action\r\n})\r\n\r\nexport const deliteOneBranchOnModeration = action => ({\r\n    type: DELITE_ONE_BRANCH_ON_MODERATION,\r\n    payload: action\r\n})","const ADD_BRANCH_TITLE = 'ADD_BRANCH_TITLE';\r\nconst ADD_BRANCH_DESCRIPTION = 'ADD_BRANCH_DESCRIPTION';\r\nconst ADD_BRANCH_X = 'ADD_BRANCH_X';\r\nconst ADD_BRANCH_Y = 'ADD_BRANCH_Y';\r\nconst ADD_BRANCH_HAS_TUNNEL = 'ADD_BRANCH_HAS_TUNNEL';\r\nconst ADD_BRANCH_HAS_TWO_TUNNEL_DISABLED = 'ADD_BRANCH_HAS_TWO_TUNNEL_DISABLED';\r\nconst ADD_BRANCH_HAS_TWO_TUNNEL = 'ADD_BRANCH_HAS_TWO_TUNNEL';\r\nconst ADD_BRANCH_COLOR = 'ADD_BRANCH_COLOR';\r\nconst ADD_BRANCH_EMPTY = 'ADD_BRANCH_EMPTY';\r\n\r\nexport const addBranchTitle = action => {\r\n    return {\r\n        type: ADD_BRANCH_TITLE,\r\n        payload: action,\r\n    }\r\n}\r\n\r\nexport const addBranchDescription = action => {\r\n    return {\r\n        type: ADD_BRANCH_DESCRIPTION,\r\n        payload: action,\r\n    }\r\n}\r\n\r\nexport const addBranchX = action => {\r\n    return {\r\n        type: ADD_BRANCH_X,\r\n        payload: action,\r\n    }\r\n}\r\n\r\nexport const addBranchY = action => {\r\n    return {\r\n        type: ADD_BRANCH_Y,\r\n        payload: action,\r\n    }\r\n}\r\n\r\nexport const addBranchHasTunnel = action => {\r\n    return {\r\n        type: ADD_BRANCH_HAS_TUNNEL,\r\n        payload: action,\r\n    }\r\n}\r\n\r\nexport const addBranchHasTwoTunnelDisabled = action => {\r\n    return {\r\n        type: ADD_BRANCH_HAS_TWO_TUNNEL_DISABLED,\r\n        payload: action,\r\n    }\r\n}\r\n\r\nexport const addBranchHasTwoTunnel = action => {\r\n    return {\r\n        type: ADD_BRANCH_HAS_TWO_TUNNEL,\r\n        payload: action,\r\n    }\r\n}\r\n\r\nexport const addBranchColor = action => {\r\n    return {\r\n        type: ADD_BRANCH_COLOR,\r\n        payload: action,\r\n    }\r\n}\r\n\r\nexport const addBranchEmpty = () => {\r\n    return {\r\n        type: ADD_BRANCH_EMPTY,\r\n    }\r\n}","import React from 'react'\r\nimport { ModalWindow } from './index'\r\nimport { AddBranchForm } from './index'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addBranchOnModeration } from './../redux/actions/addBranchOnModeration'\r\nimport { addBranchEmpty } from './../redux/actions/addBranchForm'\r\n\r\nfunction AddBranch() {\r\n    const dispatch = useDispatch()\r\n    const state = useSelector(state => state.addBranchForm)\r\n\r\n    const [visibleModal, setVisibleModal] = React.useState(false);\r\n\r\n    const validateCheck = () => {\r\n        if (\r\n            state.title !== ''\r\n            && state.description !== ''\r\n            && state.x !== '0'\r\n            && state.y !== '0'\r\n            && (\r\n                state.hasTunnel === true && state.branchColor.length !== 0\r\n                ||\r\n                state.hasTunnel === false && state.branchColor.length === 0\r\n            )\r\n        ) {\r\n            let color = state.branchColor.length > 1 ? 'two' : state.branchColor[0] ;\r\n            dispatch(addBranchOnModeration({\r\n                name: state.title,\r\n                description: state.description,\r\n                branch: color, \r\n                type: 'portal', \r\n                tunnel: state.hasTunnel, \r\n                x: +state.x, \r\n                y: +state.y\r\n            }))\r\n            dispatch(addBranchEmpty())\r\n            setVisibleModal(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button onClick={() => setVisibleModal(true)} className=\"btn btn-addBranch\">\r\n                Добавить маркер\r\n            </button>\r\n            {visibleModal && <ModalWindow \r\n                title={'Добавить маркер'} \r\n                body={<AddBranchForm />} \r\n                btnConfirm={\r\n                    <button className=\"btn btn-confirm\" onClick={validateCheck}>Добавить</button>\r\n                }\r\n                btnClose={\r\n                    <button onClick={() => setVisibleModal(false)} className=\"btn btn-close\">Закрыть</button>\r\n                }\r\n            />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddBranch\r\n","import React from 'react'\r\n\r\nfunction ModalWindow(props) {\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n                <div className=\"modal-header\">\r\n                    {props.title}\r\n                </div>\r\n                <div className=\"modal-content\">\r\n                    {props.body}\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    {props.btnClose}\r\n                    {props.btnConfirm}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalWindow\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { \r\n    addBranchTitle, \r\n    addBranchDescription, \r\n    addBranchX, \r\n    addBranchY, \r\n    addBranchHasTunnel,\r\n    addBranchHasTwoTunnelDisabled,\r\n    addBranchHasTwoTunnel,\r\n    addBranchColor,\r\n} from './../redux/actions/addBranchForm'\r\n\r\nfunction AddBranchForm() {\r\n    const dispatch = useDispatch()\r\n    const state = useSelector(state => state.addBranchForm)\r\n    const [branchVisible, setBranchVisible] = React.useState([\r\n        {text: 'Желтая', type: 'yellow'},\r\n        {text: 'Синяя', type: 'blue'},\r\n    ]);\r\n\r\n    const textCheck = (e, type) => {\r\n        const numbersSymvols = ['+','-','0','1','2','3','4','5','6','7','8','9'];\r\n        const maxCord = 2000;\r\n        switch (type) {\r\n            case 'TITLE':\r\n                const banSymvols = ['?', '%', '$', ';']\r\n                outer: for (let i = 0; i < banSymvols.length; i++) {\r\n                    if (e.target.value.includes(banSymvols[i])) {\r\n                        e.target.value = e.target.value.replace(/[?%$;]/, '');\r\n                        break outer;\r\n                    }\r\n                }\r\n                dispatch(addBranchTitle(e.target.value))\r\n                break;\r\n            case 'DESCRIPTION':\r\n                if (e.target.value.includes('%')) {\r\n                    e.target.value = e.target.value.replace('%', '')\r\n                }\r\n                dispatch(addBranchDescription(e.target.value))\r\n                break;\r\n            case 'X_CORD':\r\n                outer: for (let i = 0; i < numbersSymvols.length; i++) {\r\n                    if (!e.target.value.includes(numbersSymvols[i])) {\r\n                        if (e.target.value === '') {e.target.value = '0'}\r\n                        if (e.target.value[1] !== undefined) {\r\n                            if (e.target.value[0] === '0' && e.target.value[1] !== '0') {e.target.value = e.target.value[1]}\r\n                        }\r\n                        if (e.target.value[0] === '0' && e.target.value[1] === '0') {e.target.value = '0'}\r\n                        if (e.target.value[0] === '-' && e.target.value[1] === '0') {e.target.value = '-'}\r\n                        e.target.value = e.target.value[0] + e.target.value.slice(1).replace(/\\D+/g, '')\r\n                        e.target.value = e.target.value.replace(/(?!-)[^0-9]/g, '');\r\n                        if (e.target.value > maxCord) {e.target.value = maxCord}\r\n                        if (e.target.value < -maxCord) {e.target.value = -maxCord}\r\n                        break outer;\r\n                    }\r\n                }\r\n                if (e.target.value >= 0) {\r\n                    setBranchVisible([\r\n                        {text: 'Желтая', type: 'yellow'}, \r\n                        branchVisible[1]\r\n                    ])\r\n                } else {\r\n                    setBranchVisible([\r\n                        {text: 'Зеленая', type: 'green'}, \r\n                        branchVisible[1]\r\n                    ])\r\n                }\r\n                dispatch(addBranchX(e.target.value))\r\n                break;\r\n            case 'Y_CORD':\r\n                outer: for (let i = 0; i < numbersSymvols.length; i++) {\r\n                    if (!e.target.value.includes(numbersSymvols[i])) {\r\n                        if (e.target.value === '') {e.target.value = '0'}\r\n                        if (e.target.value[1] !== undefined) {\r\n                            if (e.target.value[0] === '0' && e.target.value[1] !== '0') {e.target.value = e.target.value[1]}\r\n                        }\r\n                        if (e.target.value[0] === '0' && e.target.value[1] === '0') {e.target.value = '0'}\r\n                        if (e.target.value[0] === '-' && e.target.value[1] === '0') {e.target.value = '-'}\r\n                        e.target.value = e.target.value[0] + e.target.value.slice(1).replace(/\\D+/g, '')\r\n                        e.target.value = e.target.value.replace(/(?!-)[^0-9]/g, '');\r\n                        if (e.target.value > maxCord) {e.target.value = maxCord}\r\n                        if (e.target.value < -maxCord) {e.target.value = -maxCord}\r\n                        break outer;\r\n                    }\r\n                }\r\n                if (e.target.value >= 0) {\r\n                    setBranchVisible([\r\n                        branchVisible[0],\r\n                        {text: 'Красная', type: 'red'}\r\n                    ])\r\n                } else {\r\n                    setBranchVisible([\r\n                        branchVisible[0],\r\n                        {text: 'Синяя', type: 'blue'}\r\n                    ])\r\n                }\r\n                dispatch(addBranchY(e.target.value))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const checkboxCheck = (type) => {\r\n        if (type === 'HAS_TUNNEL') {\r\n            dispatch(addBranchHasTunnel(!state.hasTunnel))\r\n            if (!state.hasTunnel === false) {\r\n                dispatch(addBranchHasTwoTunnel(false))\r\n                dispatch(addBranchHasTwoTunnelDisabled(true))\r\n            } else {\r\n                dispatch(addBranchHasTwoTunnelDisabled(false))\r\n            }\r\n        }\r\n        else if (type === 'HAS_TWO_TUNNEL') {\r\n            if (!state.hasTwoTunnel) {\r\n                dispatch(addBranchColor([branchVisible[0].type, branchVisible[1].type]))\r\n            } else {\r\n                dispatch(addBranchColor([]))\r\n            }\r\n            dispatch(addBranchHasTwoTunnel(!state.hasTwoTunnel))\r\n        }\r\n    }\r\n\r\n    let buttons;\r\n    buttons = branchVisible.map((btn, index) => {\r\n        return (\r\n        <div className=\"select__item\" key={`${btn.text}${index}`}>\r\n            <span \r\n                className={state.branchColor.includes(btn.type) ? btn.type : ''}\r\n                onClick={() => dispatch(addBranchColor([btn.type]))}>\r\n                    {btn.text}\r\n                </span>\r\n        </div> \r\n        )\r\n    })\r\n\r\n    const AddBranchForm__ = 'AddBranchForm__'\r\n\r\n    return (\r\n        <div className=\"AddBranchForm\">\r\n            <div className=\"formGroup column\">\r\n                <label htmlFor={`${AddBranchForm__}input`} className=\"label-text\">Название</label>\r\n                <input id={`${AddBranchForm__}input`} type=\"text\" maxlength='25' className=\"input-text\" value={state.title} onChange={function(e){textCheck(e, 'TITLE')}}/>\r\n            </div>\r\n            <div className=\"formGroup column\">\r\n                <label htmlFor={`${AddBranchForm__}description`} className=\"label-text\">Описание</label>\r\n                <textarea id={`${AddBranchForm__}description`} maxlength='250' type=\"text\" className=\"textarea\" value={state.description} onChange={function(e){textCheck(e, 'DESCRIPTION')}}/>\r\n            </div>\r\n            <div className=\"flex\">\r\n                <div className=\"formGroup line\">\r\n                    <label htmlFor={`${AddBranchForm__}x`} className=\"label-text\">X:</label>\r\n                    <input id={`${AddBranchForm__}x`} type=\"text\" className=\"input-text\" value={state.x} onChange={function(e){textCheck(e, 'X_CORD')}}/>\r\n                </div>\r\n                <div className=\"formGroup line\">\r\n                    <label htmlFor={`${AddBranchForm__}z`} className=\"label-text\">Z:</label>\r\n                    <input id={`${AddBranchForm__}z`} type=\"text\" className=\"input-text\" value={state.y} onChange={function(e){textCheck(e, 'Y_CORD')}}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex\">\r\n                <div className=\"formGroup line\">\r\n                    <label htmlFor={`${AddBranchForm__}hasTunnel`} className=\"label-checkbox\">Есть туннель?</label>\r\n                    <input id={`${AddBranchForm__}hasTunnel`} type=\"checkbox\" className=\"input-checkbox\" checked={state.hasTunnel} onChange={function(){checkboxCheck('HAS_TUNNEL')}}/>\r\n                </div>\r\n                <div className=\"formGroup line\">\r\n                    <label htmlFor={`${AddBranchForm__}hasTwoTunnel`} className=\"label-checkbox\">Построено 2 Ветки</label>\r\n                    <input id={`${AddBranchForm__}hasTwoTunnel`} type=\"checkbox\" className=\"input-checkbox\" disabled={state.hasTwoTunnelDisabled} checked={state.hasTwoTunnel} onChange={function(){checkboxCheck('HAS_TWO_TUNNEL')}}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"formGroup column\">\r\n                <label className=\"label-checkbox\">Ветка</label>\r\n                <div className={state.hasTunnel === true ? 'select__castom' : 'select__castom select__castom--disabled'}>\r\n                    {buttons}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBranchForm","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { branchsOnNeaterMapModeration } from './../redux/actions/branchsOnNeaterMapModeration'\r\n\r\nfunction Moderation() {\r\n    const dispatch = useDispatch()\r\n    const state = useSelector(state => state)\r\n\r\n    const mapModerationGenerate = branch => {\r\n        const payload = [branch, ...state.branchs]\r\n        dispatch(branchsOnNeaterMapModeration(payload))\r\n    }\r\n\r\n    return (\r\n        <div className='moderationPage'>\r\n            <div className=\"container page\">\r\n                    <h2>Модерация маркеров</h2>\r\n                    {\r\n                        state.branchsOnModeration.map((item, index) => {\r\n                            return <div key={`${item.description}` + index} className=\"moderationBranch__box\">\r\n                                    <div className=\"moderationBranch__item\">\r\n                                        <div className=\"moderationBranch__name\">\r\n                                            {item.name}\r\n                                        </div>\r\n                                        <div className=\"moderationBranch__description\">\r\n                                            {item.description}\r\n                                        </div>\r\n                                        <div className=\"moderationBranch__tunnel\">\r\n                                            {console.log(item.tunnel)}\r\n                                            Туннель: {item.tunnel ? 'Есть' : 'Нету'}\r\n                                        </div>\r\n                                        <div className=\"moderationBranch__x\">\r\n                                            X: {item.x}\r\n                                        </div>\r\n                                        <div className=\"moderationBranch__z\">\r\n                                            Z: {item.y}\r\n                                        </div>\r\n                                        <Link className=\"btn moderationBranch__btn\" to=\"map-moderation\" onClick={() => mapModerationGenerate(item)}>\r\n                                            Проверить\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                        })\r\n                    }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Moderation\r\n","const BRANCHS_ON_NEATHER_MAP_MODERATION = 'BRANCHS_ON_NEATHER_MAP_MODERATION'\r\n\r\nexport const branchsOnNeaterMapModeration = action => ({\r\n    type: BRANCHS_ON_NEATHER_MAP_MODERATION,\r\n    payload: action\r\n})","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setUser } from './../redux/actions/setUser'\r\n\r\nfunction Settings() {\r\n    const [adminCheckbox, setAdminCheckbox] = React.useState(false);\r\n    const state = useSelector(state => state.user.user)\r\n    const dispatch = useDispatch()\r\n\r\n    if (state === 'user' && adminCheckbox === true) {setAdminCheckbox(false)} \r\n    else if (state === 'admin' && adminCheckbox === false) {setAdminCheckbox(true)}\r\n\r\n    const setUserAvtion = state === 'user' \r\n        ? 'admin'\r\n        : 'user'\r\n\r\n    return (\r\n        <div className='settingsPage'>\r\n            <div className=\"container page\">\r\n                    <h2>Админ</h2>\r\n                    <div className=\"formGroup line\">\r\n                        <label htmlFor=\"settings\" className=\"label-text\">Быть админом</label>\r\n                        <input id=\"settings\" type=\"checkbox\" className=\"input-checkbox\" checked={adminCheckbox} onChange={() => dispatch(setUser(setUserAvtion))}/>\r\n                    </div>\r\n                    <p>Сайт использует localStorage</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","const SET_USER = 'SET_USER'\r\n\r\nexport const setUser = action => ({\r\n    type: SET_USER,\r\n    payload: action\r\n})","const BRANCHS = 'BRANCHS'\r\n\r\nexport const addBranch = action => {\r\n    return {\r\n        type: BRANCHS,\r\n        payload: action\r\n    }   \r\n}","import React from 'react'\r\nimport { ModalNeatherMap, NamesNeatherMap } from './../components/index'\r\nimport { connect } from 'react-redux'\r\nimport { branchsOnNeaterMapModeration } from './../redux/actions/branchsOnNeaterMapModeration'\r\nimport { addBranch } from './../redux/actions/addBranch'\r\nimport { deliteOneBranchOnModeration } from './../redux/actions/addBranchOnModeration'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass MapModeration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.NeatherMap = React.createRef();\r\n        this.state = {\r\n            modalNeatherMapIsOpen: false,\r\n            isRender: false,\r\n        }\r\n     }\r\n\r\n     componentDidMount() {\r\n        this.ctx = this.NeatherMap.current.getContext('2d');\r\n        if (this.props.branchs.length !== 0) {\r\n            this.onMarkerView = {\r\n                x: this.props.branchs[0].x,\r\n                z: this.props.branchs[0].y\r\n            }\r\n        } else {\r\n            this.onMarkerView = {\r\n                x: 0,\r\n                z: 0\r\n            }\r\n        }\r\n        this.mouseDown = false;\r\n        this.startDragOffset = {};\r\n        this.pointRadius = 5;\r\n        this.scale = 1.0;\r\n        this.scaleMultiplier = 0.9;\r\n        this.translatePos = {\r\n            x: this.NeatherMap.current.width / 2 - this.onMarkerView.x,\r\n            y: this.NeatherMap.current.height / 2 - this.onMarkerView.z\r\n        };\r\n        this.startTranslatePos = {\r\n            x: this.NeatherMap.current.width / 2,\r\n            y: this.NeatherMap.current.height / 2\r\n        };\r\n        this.firstRender = true;\r\n        this.draw(this.scale, this.translatePos);\r\n        this.pointModal()\r\n     }\r\n\r\n     componentDidUpdate() {\r\n        this.draw(this.scale, this.translatePos);\r\n     }\r\n\r\n     startLooking = (evt) => {\r\n        this.mouseDown = true;\r\n        this.startDragOffset.x = evt.clientX - this.translatePos.x;\r\n        this.startDragOffset.y = evt.clientY - this.translatePos.y;\r\n     }\r\n\r\n     looking = (evt) => {\r\n        if (this.mouseDown) {\r\n            this.translatePos.x = evt.clientX - this.startDragOffset.x;\r\n            this.translatePos.y = evt.clientY - this.startDragOffset.y;\r\n            this.draw(this.scale, this.translatePos);\r\n        }\r\n        if (this.markers !== undefined) {\r\n            this.mouseOnMarker = false;\r\n            this.markers.map(({markerHitbox, markerInfo}, index) => {\r\n                if (evt.pageX > markerHitbox.xStart &&\r\n                    evt.pageX < markerHitbox.xFinish &&\r\n                    evt.pageY > markerHitbox.yStart &&\r\n                    evt.pageY < markerHitbox.yFinish \r\n                    ) {\r\n                        this.NeatherMap.current.style = 'cursor: pointer;'\r\n                        this.mouseOnMarker = true\r\n                        this.markerForModal = [markerHitbox, markerInfo]\r\n                        this.setState({modalNeatherMapIsOpen: true})\r\n                    }\r\n                if (!this.mouseOnMarker) {\r\n                    this.NeatherMap.current.style = 'cursor: default;'\r\n                    this.setState({modalNeatherMapIsOpen: false})\r\n                }\r\n            })\r\n        }\r\n        this.pointModal()\r\n     }\r\n\r\n     finishLooking = () => {\r\n        this.mouseDown = false;\r\n     }\r\n\r\n     buttonFunction = (type) => {\r\n        this.newBranchsModeration = [...this.props.branchsModeration]\r\n        for (let i = 0; i < this.newBranchsModeration.length; i++) {\r\n            if (this.newBranchsModeration[i] === this.props.branchs[0]) {\r\n                this.newBranchsModeration.splice(i, 1)\r\n            }\r\n        }\r\n        this.props.dispatch(deliteOneBranchOnModeration(this.newBranchsModeration))\r\n        if (type === 'add') {this.props.dispatch(addBranch(this.props.branchs[0]))}\r\n     }\r\n\r\n     wheel = (evt) => {\r\n        if (evt.deltaY > 0) {\r\n            this.scale *= this.scaleMultiplier\r\n        } else {\r\n            this.scale /= this.scaleMultiplier\r\n        }\r\n        if (this.scale > 2) { this.scale = 2 }\r\n        if (this.scale < 0.5) { this.scale = 0.5 }\r\n        this.pointModal()\r\n        this.draw(this.scale, this.translatePos);\r\n        this.setState({modalNeatherMapIsOpen: false})\r\n     }\r\n\r\n     pointModal = () => {\r\n        this.markers = []\r\n        this.points.map(({point}) => {\r\n            this.markers.push({\r\n                markerHitbox: {\r\n                    xStart: this.translatePos.x + (point.x * this.scale) - this.pointRadius,\r\n                    xFinish: this.translatePos.x + (point.x * this.scale) + this.pointRadius,\r\n                    yStart: this.translatePos.y + (point.y * this.scale) - this.pointRadius,\r\n                    yFinish: this.translatePos.y + (point.y * this.scale) + this.pointRadius,\r\n                },\r\n                markerInfo: {point}\r\n            })\r\n        })\r\n        if (this.firstRender) {\r\n            this.setState({isRender: !this.state.isRender})\r\n            this.firstRender = false;\r\n        }\r\n     }\r\n\r\n     renderMainTunnels = () => {\r\n        this.maxCordMainTunnel = 2000;\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(0, 0);\r\n        this.ctx.lineTo(0, this.maxCordMainTunnel);\r\n        this.ctx.strokeStyle = 'red'\r\n        this.ctx.lineWidth = '10';\r\n        this.ctx.stroke();\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(0, 0);\r\n        this.ctx.lineTo(0, -this.maxCordMainTunnel);\r\n        this.ctx.strokeStyle = 'blue'\r\n        this.ctx.lineWidth = '10';\r\n        this.ctx.stroke();\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(0, 0);\r\n        this.ctx.lineTo(this.maxCordMainTunnel, 0);\r\n        this.ctx.strokeStyle = 'yellow'\r\n        this.ctx.lineWidth = '10';\r\n        this.ctx.stroke();\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(0, 0);\r\n        this.ctx.lineTo(-this.maxCordMainTunnel, 0);\r\n        this.ctx.strokeStyle = 'green'\r\n        this.ctx.lineWidth = '10';\r\n        this.ctx.stroke();\r\n     }\r\n\r\n     draw = (scale, translatePos) => {\r\n        this.ctx.clearRect(0, 0, this.NeatherMap.current.width, this.NeatherMap.current.height);\r\n        this.ctx.save();\r\n        this.ctx.translate(translatePos.x, translatePos.y);\r\n        this.ctx.scale(scale, scale);\r\n\r\n        this.renderMainTunnels()\r\n\r\n        this.points = [];\r\n\r\n        this.props.branchs.map(line => {\r\n            this.ctx.beginPath();\r\n\r\n            if (line.tunnel && line.branch !== 'two') {\r\n\r\n                if (line.branch === 'red' || line.branch === 'blue') {\r\n                    this.ctx.moveTo(0, line.y);\r\n                    this.ctx.lineTo(line.x, line.y);\r\n                } else if (line.branch === 'green' || line.branch === 'yellow') {\r\n                    this.ctx.moveTo(line.x, 0);\r\n                    this.ctx.lineTo(line.x, line.y);\r\n                }\r\n    \r\n                switch (line.branch) {\r\n                    case 'blue':\r\n                        this.ctx.strokeStyle = 'blue'\r\n                        break;\r\n                    case 'yellow':\r\n                        this.ctx.strokeStyle = 'yellow'\r\n                        break;\r\n                    case 'red':\r\n                        this.ctx.strokeStyle = 'red'\r\n                        break;\r\n                    case 'green':\r\n                        this.ctx.strokeStyle = 'green'\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                this.ctx.lineWidth = '8';\r\n                this.ctx.stroke();\r\n            }\r\n\r\n            if (line.branch === 'two') {\r\n                this.ctx.beginPath();\r\n                this.ctx.moveTo(0, line.y);\r\n                this.ctx.lineTo(line.x, line.y);\r\n                if (line.y < 0) {\r\n                    this.ctx.strokeStyle = 'blue'\r\n                } else {\r\n                    this.ctx.strokeStyle = 'red'    \r\n                }\r\n                this.ctx.lineWidth = '10';\r\n                this.ctx.stroke();\r\n\r\n                this.ctx.beginPath();\r\n                this.ctx.moveTo(line.x, 0);\r\n                this.ctx.lineTo(line.x, line.y);\r\n                if (line.x < 0) {\r\n                    this.ctx.strokeStyle = 'green'\r\n                } else {\r\n                    this.ctx.strokeStyle = 'yellow'    \r\n                }\r\n                this.ctx.lineWidth = '10';\r\n                this.ctx.stroke();\r\n            }\r\n    \r\n            if (line.type === 'portal' || line.type === 'end') {\r\n                this.ctx.beginPath();\r\n                this.points.push({point: line})\r\n                this.ctx.arc(line.x, line.y, this.pointRadius, 0, 2 * 3.14)\r\n                this.ctx.lineWidth = '1';\r\n                this.ctx.fillStyle = 'purple'\r\n                this.ctx.strokeStyle = 'black';\r\n                this.ctx.stroke();\r\n                this.ctx.fill();\r\n            }\r\n    \r\n            if (line.type === 'hab') {\r\n                this.ctx.beginPath();\r\n                this.ctx.arc(line.x, -line.y, 25, 0, 2 * 3.14)\r\n                this.ctx.lineWidth = '1';\r\n                this.ctx.fillStyle = 'white';\r\n                this.ctx.strokeStyle = 'black';\r\n                this.ctx.stroke();\r\n                this.ctx.fill();\r\n            }\r\n        })\r\n        this.ctx.restore();\r\n     }\r\n    \r\n    render() {\r\n        return (\r\n            <div style={{position: \"relative\", overflow: \"hidden\"}}>\r\n                <canvas \r\n                height={document.body.clientHeight}\r\n                width={document.body.clientWidth}\r\n                ref={this.NeatherMap} \r\n                onMouseDown={this.startLooking}\r\n                onMouseMove={this.looking}\r\n                onMouseUp={this.finishLooking}\r\n                onMouseOver={this.finishLooking}\r\n                onWheel={this.wheel}\r\n                onClick={this.pointModal}\r\n                />\r\n                {\r\n                    this.markers === undefined \r\n                    ?\r\n                    ''\r\n                    :\r\n                    this.markers.map((marker, index) => <NamesNeatherMap props={marker} scale={this.scale} key={index}/>)\r\n                }\r\n                {this.state.modalNeatherMapIsOpen && <ModalNeatherMap marker={this.markerForModal} />}\r\n                <div className=\"mapModeration__buttons\">\r\n                    <Link to='moderation' className=\"btn btn-confirm shadow\" onClick={() => this.buttonFunction('add')}>Одобрить</Link>\r\n                    <Link to='moderation' className=\"btn btn-close shadow\" onClick={() => this.buttonFunction('delite')}>Отклонить</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        branchs: state.branchsOnNeaterMapModeration,\r\n        branchsModeration: state.branchsOnModeration,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addBranch: action => dispatch(addBranch(action)),\r\n        deliteOneBranchOnModeration: action => dispatch(deliteOneBranchOnModeration(action)),\r\n        dispatch\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapModeration)\r\n","import React from 'react'\r\nimport mainPage from '../img/mainPage.jpg'\r\n\r\nfunction MainPage() {\r\n    return (\r\n        <div className='mainPage'>\r\n            <div className=\"container page\">\r\n                <div className=\"mainPage__img\">\r\n                    <div className=\"mainPage__img__text\">\r\n                        <h2>Mine-Imperial</h2>\r\n                        <h3>Сайт, посвященный серверу Minecraft</h3>\r\n                    </div>\r\n                    <img src={mainPage} alt=\"\"/>\r\n                </div>\r\n                <div className=\"page__content\">\r\n                    <h2>Что есть на сайте?</h2>\r\n                    <ul>\r\n                        <li>На данный момент вы можете посмотреть карту нижнего мира, нажав на три линии в верхнем правом углу, и\r\n                            <br/> перейти во вкладку \"Карта нижнего мира\".</li>\r\n                        <li>Там же вы можете добавить свой маркер, нажав внизу на кнопку \"Добавить маркер\", и ввести свои данные.</li>\r\n                        <li>После этого ваш маркер идет на модерацию, где его проверит администратор.</li>\r\n                        <li>Стать администратором можно во вкладке \"Настройки\".</li>\r\n                        <li>Когда администратор будет проверять маркер, у него будет возможность его одобрить или отклонить.</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom'\r\n\r\nimport { Header, NeatherMap, Settings, Moderation, MapModeration, MainPage } from './components'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Route component={MainPage} path='/' exact />\r\n      <Route component={NeatherMap} path='/neather' exact />\r\n      <Route component={Settings} path='/settings' exact />\r\n      <Route component={Moderation} path='/moderation' exact />\r\n      <Route component={MapModeration} path='/map-moderation' exact />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = [\r\n    // { name: 'Красная', description: 'Тест', branch: 'red', type: 'portal', tunnel: true, x: 50, y: 100 },\r\n    // { name: 'Красная', description: 'Тест', branch: 'red', type: 'portal', tunnel: true, x: -50, y: 100 },\r\n    // { name: 'Желтая', description: 'Тест', branch: 'yellow', type: 'portal', tunnel: true, x: 100, y: 50 },\r\n    // { name: 'Желтая', description: 'Тест', branch: 'yellow', type: 'portal', tunnel: true, x: 100, y: -50 },\r\n    // { name: 'Синяя', description: 'Тест', branch: 'blue', type: 'portal', tunnel: true, x: 50, y: -100 },\r\n    // { name: 'Синяя', description: 'Тест', branch: 'blue', type: 'portal', tunnel: true, x: -50, y: -100 },\r\n    // { name: 'Зеленая', description: 'Тест', branch: 'green', type: 'portal', tunnel: true, x: -100, y: 50 },\r\n    // { name: 'Зеленая', description: 'Тест', branch: 'green', type: 'portal', tunnel: true, x: -100, y: -50 },\r\n    // { name: 'Синяя Желтая', description: 'Тест', branch: 'two', type: 'portal', tunnel: true, x: 300, y: -300 },\r\n    // { name: 'Синяя Зеленая', description: 'Тест', branch: 'two', type: 'portal', tunnel: true, x: -300, y: -300 },\r\n    // { name: 'Красная Желтая', description: 'Тест', branch: 'two', type: 'portal', tunnel: true, x: 300, y: 300 },\r\n    // { name: 'Красная Зеленая', description: 'Тест', branch: 'two', type: 'portal', tunnel: true, x: -300, y: 300 },\r\n    { name: 'Райск', description: 'Столица Империи', branch: 'red', type: 'portal', tunnel: true, x: 21, y: 194 },\r\n    { name: 'Фермы', description: 'Тут ферма пороха, опыта и кактусов', branch: 'red', type: 'portal', tunnel: true, x: -12, y: 314 },\r\n    { name: 'Крепость', description: 'Крепость нижнего мира', branch: false, type: 'portal', tunnel: true, x: 100, y: 350 },\r\n    { name: 'Месса', description: 'Тут много терракоты', branch: 'red', type: 'portal', tunnel: true, x: 15, y: 525 },\r\n    { name: 'Главный портал в эндер мир', description: 'Если возродил дракона, то сам его и убивай', branch: 'red', type: 'portal', tunnel: true, x: 121, y: 146 },\r\n    { name: 'Пляж', description: 'Заброшенное место', branch: 'yellow', type: 'portal', tunnel: true, x: 175, y: 62 },\r\n    { name: 'Ферма гвардианов', description: 'Тут можно пофармить морские фонарики', branch: 'green', type: 'portal', tunnel: true, x: -194, y: 42 },\r\n    { name: 'Красный биом', description: 'Много боровов', branch: 'green', type: 'portal', tunnel: true, x: -1000, y: -200 },\r\n    { name: 'Тёмный лес', description: 'Тёмный лес, ровное болото', branch: 'blue', type: 'portal', tunnel: true, x: -8, y: -126 },\r\n    { name: 'Грибной остров', description: 'Можно брать грибных коров', branch: 'blue', type: 'portal', tunnel: true, x: -473, y: -1062 },\r\n    { name: 'Хаб', description: 'тут', branch: 'all', type: 'hab', x: 0, y: 0 },\r\n];\r\n\r\nconst branchsFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'BRANCHS':\r\n           return [\r\n               ...state, action.payload\r\n           ]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default branchsFilter","const initialState = {\r\n    title: '',\r\n    description: '',\r\n    x: '0',\r\n    y: '0',\r\n    hasTunnel: false,\r\n    hasTwoTunnelDisabled: true,\r\n    hasTwoTunnel: false,\r\n    branchColor: []\r\n}\r\n\r\nconst addBranchFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_BRANCH_TITLE':\r\n            return {\r\n                ...state,\r\n                title: action.payload,\r\n            }\r\n        case 'ADD_BRANCH_DESCRIPTION':\r\n            return {\r\n                ...state,\r\n                description: action.payload,\r\n            }\r\n        case 'ADD_BRANCH_X':\r\n            return {\r\n                ...state,\r\n                x: action.payload,\r\n                hasTwoTunnel: false,\r\n                branchColor: [],\r\n            }\r\n        case 'ADD_BRANCH_Y':\r\n            return {\r\n                ...state,\r\n                y: action.payload,\r\n                hasTwoTunnel: false,\r\n                branchColor: [],\r\n            }\r\n        case 'ADD_BRANCH_HAS_TUNNEL':\r\n            return {\r\n                ...state,\r\n                hasTunnel: action.payload,\r\n                branchColor: [],\r\n            }\r\n        case 'ADD_BRANCH_HAS_TWO_TUNNEL_DISABLED':\r\n            return {\r\n                ...state,\r\n                hasTwoTunnelDisabled: action.payload,\r\n                branchColor: [],\r\n            }\r\n        case 'ADD_BRANCH_HAS_TWO_TUNNEL':\r\n            return {\r\n                ...state,\r\n                hasTwoTunnel: action.payload,\r\n            }\r\n        case 'ADD_BRANCH_COLOR':\r\n            return {\r\n                ...state,\r\n                branchColor: action.payload,\r\n                hasTwoTunnel: false,\r\n            }\r\n        case 'ADD_BRANCH_EMPTY':\r\n            return {\r\n                ...state,\r\n                title: '',\r\n                description: '',\r\n                x: '0',\r\n                y: '0',\r\n                hasTunnel: false,\r\n                hasTwoTunnelDisabled: true,\r\n                hasTwoTunnel: false,\r\n                branchColor: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default addBranchFilter","const initialState = {\r\n    user: 'user'\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer","const initialState = [\r\n    { name: 'Что здесь?', description: 'лалалалалалала', branch: 'two', type: 'portal', tunnel: true, x: 1500, y: 1500 },\r\n    { name: 'Плохой маркер', description: 'АХХАХА', branch: 'two', type: 'portal', tunnel: true, x: 345, y: 1456 },\r\n    { name: 'Магазин брони', description: 'Здесь вы можете купить броню', branch: 'yellow', type: 'portal', tunnel: true, x: 700, y: -500 },\r\n    { name: 'Сцена для мероприятий', description: 'Вход свободный, скоро построим туннель!', branch: false, type: 'portal', tunnel: false, x: -300, y: 200 },\r\n]\r\n\r\nconst branchsOnModerationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'BRANCHS_ON_MODEDERATION':\r\n            return [...state, action.payload]\r\n        case 'DELITE_ONE_BRANCH_ON_MODERATION':\r\n            return [...action.payload]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default branchsOnModerationReducer","const initialState = []\r\n\r\nconst branchsOnNeaterMapModerationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'BRANCHS_ON_NEATHER_MAP_MODERATION':\r\n            return [...action.payload]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default branchsOnNeaterMapModerationReducer","import { combineReducers } from 'redux'\r\n\r\nimport branchsFilter from './branchs'\r\nimport addBranchFilter from './addBranchForm'\r\nimport userReducer from './user'\r\nimport branchsOnModerationReducer from './branchsOnModeration'\r\nimport branchsOnNeaterMapModerationReducer from './branchsOnNeaterMapModeration'\r\n\r\nconst rootReducer = combineReducers({\r\n    branchs: branchsFilter,\r\n    addBranchForm: addBranchFilter,\r\n    user: userReducer,\r\n    branchsOnModeration: branchsOnModerationReducer,\r\n    branchsOnNeaterMapModeration: branchsOnNeaterMapModerationReducer,\r\n})\r\n\r\nexport default rootReducer","import { createStore } from 'redux'\r\nimport rootReducer from './reducers/index'\r\n\r\nconst store = createStore(rootReducer,\r\n     localStorage.getItem('redux-store') === null ? {} : JSON.parse(localStorage.getItem('redux-store')), \r\n     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nstore.subscribe(() => {\r\n    localStorage.setItem('redux-store', JSON.stringify(store.getState()))\r\n})\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport './scss/app.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}